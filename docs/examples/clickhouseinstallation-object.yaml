apiVersion: "clickhouse.altinity.com/v1"
kind: "ClickHouseInstallation"
metadata:
  name: "clickhouse-installation-test"
spec:
# actions:
#   upgrade:
#     useImage: yandex/clickhouse-server:latest
  defaults:
    replicasUseFQDN: 0 # 0 - by default, 1 - enabled
    distributedDDL:
      profile: default
    deployment:
      zone:
        matchLabels:
          clickhouse.altinity.com/zone: zone1
      podTemplateName: clickhouse-v18.16.1
      volumeClaimTemplate: default
#     scenario: Default
#
#     default value
# 
  configuration:
    zookeeper:
      nodes:
      - host: zk-statefulset-0.zk-service.default.svc.cluster.local
        port: 2181
      - host: zk-statefulset-1.zk-service.default.svc.cluster.local
        port: 2181
      - host: zk-statefulset-2.zk-service.default.svc.cluster.local
        port: 2181
    users:
      test/profile: default
      test/quotas: default
      readonly/profile: readonly
#     <users>
#        <readonly>
#          <profile>readonly</profile>
#        </readonly>
#     </users>
    profiles:
      readonly/readonly: "1"
#      <profiles>
#        <readonly>
#          <readonly>1</readonly>
#        </readonly>
#      </profiles>
      default/max_memory_usage: "1000000000"
#      <profiles>
#        <default>
#          <max_memory_usage>1000000000</max_memory_usage>
#        </default>
#      </profiles>
    quotas:
      default/interval/duration: "3600"
#     <quotas>
#       <default>
#         <interval>
#           <duration>3600</duration>
#         </interval>
#       </default>
#     </quotas>
    settings:
      compression/case/method: zstd
#      <compression>
#       <case>
#         <method>zstd</method>
#      </case>
#      </compression>
    clusters:

    - name: sharded-replicated
      layout:
        type: Standard
        shardsCount: 3
        replicasCount: 2
      deployment:
        podTemplateName: clickhouse-v18.16.1
#       scanario: Default
#       zone:
#         matchLabels:
#           clickhouse.altinity.com/zone: zone1
# 
#       values inherited from global .spec.deployment section
#
    - name: sharded-non-replicated
      layout:
        type: Standard
        shardsCount: 3
        # replicasCount not specified, assumed = 1, by default
      deployment:
        zone:
          matchLabels:
            clickhouse.altinity.com/zone: zone2
#       scenario: Default
#       podTemplateName: clickhouse-v18.16.1
#
#       values inherited from global .spec.deployment section
#
    - name: replicated
      layout:
        type: Standard
        replicasCount: 4
        # shardsCount not specified, assumed = 1, by default
#     deployment:
#       podTemplateName: clickhouse-v18.16.1
#       scanario: Default
#       zone:
#         matchLabels:
#           clickhouse.altinity.com/zone: zone1
# 
#       values inherited from global .spec.deployment section
#
    - name: customized
#     deployment:
#       scenario: Default
#       zone:
#         matchLabels:
#           clickhouse.altinity.com/zone: zone1
#       podTemplateName: clickhouse-v18.16.1
#
#       values inherited from global .spec.deployment section
#
      layout:
        type: Advanced
        shards:

        - definitionType: ReplicasCount
          replicasCount: 2
          weight: 1
#         weight - omitted by default
          internalReplication: Disabled
#         internalReplication: Enabled - default value
          deployment:
            podTemplateName: clickhouse-v18.16.1
            zone:
              matchLabels:
                clickhouse.altinity.com/zone: zone3
#           scenario: Default
#         
#           values inherited from .spec.configuration.clusters[3].deployment section
#
        - definitionType: ReplicasCount
          replicasCount: 3
#         deployment:
#           scenario: Default
#           zone:
#             matchLabels:
#               clickhouse.altinity.com/zone: zone1
#           podTemplateName: clickhouse-v18.16.1
#  
#         values inherited from .spec.configuration.clusters[3].deployment section
#  
        - definitionType: Replicas
#         deployment:
#           scenario: Default
#           zone:
#             matchLabels:
#               clickhouse.altinity.com/zone: zone1
#           podTemplateName: clickhouse-v18.16.1
#
#         values inherited from .spec.configuration.clusters[3].deployment section
#
          replicas:
          - port: 9000
            deployment:
              scenario: Default
#             zone:
#               matchLabels:
#                 clickhouse.altinity.com/zone: zone1
#             podTemplateName: clickhouse-v18.16.1
#  
#           values inherited from .spec.configuration.clusters[3].shards[2].deployment section
#           
          - deployment:
              scenario: NodeMonopoly # 1 pod (CH server instance) per node (zone can be a set of n nodes) -> podAntiAffinity
              zone:
                matchLabels:
                  clickhouse.altinity.com/zone: zone4
                  clickhouse.altinity.com/kind: ssd
              podTemplateName: clickhouse-v18.16.1

  templates:
    volumeClaimTemplates:
    - name: default
      template:
        metadata:
          name: clickhouse-data-test
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 100Mi
    podTemplates:
    # multiple pod templates makes possible to update version smoothly
    # pod template for ClickHouse v18.16.1
    - name: clickhouse-v18.16.1
      containers:
      - name: clickhouse
        volumeMounts:
        - name: clickhouse-data-test
          mountPath: /var/lib/clickhouse
        image: yandex/clickhouse-server:18.16.1
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "64Mi"
            cpu: "100m"
    # pod template for ClickHouse v18.16.2
    - name: clickhouse-v18.16.2
      containers:
      - name: clickhouse
        volumeMounts:
        - name: clickhouse-data-test
          mountPath: /var/lib/clickhouse
        image: yandex/clickhouse-server:18.16.2
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "64Mi"
            cpu: "100m"
