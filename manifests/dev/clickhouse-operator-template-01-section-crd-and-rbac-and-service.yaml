# Possible Template Parameters:
#
# ${CHOPERATOR_NAMESPACE}
# ${CHOPERATOR_IMAGE}
#
# Setup CustomResourceDefinition
# CustomResourceDefinition is namespace-less and must have unique name
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: clickhouseinstallations.clickhouse.altinity.com
spec:
  group: clickhouse.altinity.com
  version: v1
  scope: Namespaced
  names:
    kind: ClickHouseInstallation
    singular: clickhouseinstallation
    plural: clickhouseinstallations
    shortNames:
      - chi
  validation:
    openAPIV3Schema:
      properties:
        spec:
          type: object
          required:
            - configuration
          properties:
            defaults:
              type: object
              properties:
                replicasUseFQDN:
                  type: integer
                  minimum: 0
                  maximum: 1
                distributedDDL:
                  type: object
                  properties:
                    profile:
                      type: string
                templates:
                  type: object
                  properties:
                    podTemplate:
                      type: string
                    volumeClaimTemplate:
                      type: string
            configuration:
              type: object
              required:
                - clusters
              properties:
                zookeeper:
                  type: object
                  properties:
                    nodes:
                      type: array
                      items:
                        type: object
                        properties:
                          host:
                            type: string
                          port:
                            type: integer
                            minimum: 1
                users:
                  type: object
                profiles:
                  type: object
                quotas:
                  type: object
                settings:
                  type: object
                clusters:
                  type: array
                  items:
                    type: object
                    required:
                      - name
                      - layout
                    properties:
                      name:
                        type: string
                      shardsCount:
                        type: integer
                        minimum: 1
                      replicasCount:
                        type: integer
                        minimum: 1
                      templates:
                        type: object
                        properties:
                          podTemplate:
                            type: string
                          volumeClaimTemplate:
                            type: string
                      layout:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            enum:
                              - Standard
                              - Advanced
                          shardsCount:
                            type: integer
                          replicasCount:
                            type: integer
                          shards:
                            type: array
                            items:
                              type: object
                              required:
                                - definitionType
                              properties:
                                definitionType:
                                  enum:
                                    - ReplicasCount
                                    - Replicas
                                replicasCount:
                                  type: integer
                                  minimum: 1
                                weight:
                                  type: integer
                                internalReplication:
                                  enum:
                                    - Disabled
                                    - Enabled
                                templates:
                                  type: object
                                  properties:
                                    podTemplate:
                                      type: string
                                    volumeClaimTemplate:
                                      type: string
                                replicas:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      port:
                                        type: integer
                                        minimum: 1
                                      templates:
                                        type: object
                                        properties:
                                          podTemplate:
                                            type: string
                                          volumeClaimTemplate:
                                            type: string
            templates:
              type: object
              properties:
                volumeClaimTemplates:
                  type: array
                  items:
                    type: object
                    required:
                      - name
                      - spec
                    properties:
                      name:
                        type: string
                      spec:
                        # TODO specify PersistentVolumeClaimSpec
                        type: object
                podTemplates:
                  type: array
                  items:
                    type: object
                    required:
                      - name
                      - spec
                    properies:
                      name:
                        type: string
                      spec:
                        # TODO specify PodSpec
                        type: object
---
# Setup ServiceAccount
# ServiceAccount would be created in kubectl-specified namespace
apiVersion: v1
kind: ServiceAccount
metadata:
  name: clickhouse-operator
  namespace: ${CHOPERATOR_NAMESPACE}
---
# Setup ClusterRoleBinding between ClusterRole and ServiceAccount.
# ClusterRoleBinding is namespace-less and must have unique name
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clickhouse-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: clickhouse-operator
    namespace: ${CHOPERATOR_NAMESPACE}
---
# Setup ClusterIP Service to provide monitoring metrics for Prometheus
# Service would be created in kubectl-specified namespace
# In order to get access outside of k8s it should be exposed as:
# kubectl --namespace prometheus port-forward service/prometheus 9090
# and point browser to localhost:9090
kind: Service
apiVersion: v1
metadata:
  name: clickhouse-operator-metrics
  namespace: ${CHOPERATOR_NAMESPACE}
  labels:
    app: clickhouse-operator
spec:
  ports:
    - port: 8888
      name: clickhouse-operator-metrics
  selector:
    app: clickhouse-operator
